# name of the workflow to be displayed in the github interface
name: "otus-cpp-professional CI"

# criterias on which jobs are triggered
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

    branches:
      - main

jobs:
  # the name of the job
  build:
    # the environment (latest version of ubuntu in this case)
    runs-on: ubuntu-latest
    permissions: write-all
    # the list of the steps (will be executed one after another)
    steps:
      # uses - use the already written action (in this case, download current repository to the local machine)
      - uses: actions/checkout@v2
        # with - allows to pass parameters to the action
        with:
          submodules: true
      # run - runs a system-specific command (in this case, shell-command because the system is ubuntu)
      - name: Build
        run: |
          cd ./home1
          sudo apt-get update && sudo apt-get install libgtest-dev
          cmake -DPATCH_VERSION=${{ github.run_number }} ../
          cmake --build .
          cmake --build . --target test
          cmake --build . --target package
          cd ..
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./home1/helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
    
